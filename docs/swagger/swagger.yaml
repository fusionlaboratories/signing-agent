openapi: 3.0.2
servers:
  - url: 'http://localhost:8007'
  - url: 'https://localhost:8007'
   
security: []
info:
    contact:
        email: support@qredo.com
        name: Qredo API Services
        url: https://www.qredo.com
    description: |-
        The Qredo Signing Agent service interacts with the Qredo API v2 to register a Signing Agent to automate approvals according to your custody policy. <br/>
        To start using the Signing Agent, you need to set up an API key in the Qredo Web App, run the Signing Agent, and register it. To learn more, see the [Get Started guide](https://developers.qredo.com/developer-guides/signing-agent-v2/#step-1-get-an-api-key-and-secret). <br/>
    license:
        name: APACHE 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0
    title: Qredo Signing Agent V2
    version: 2.0.0
paths:
  /api/v2/register:
    post:
      description: This will register the agent only if there is none already registered.
      operationId: RegisterAgent
      summary: Register a new agent
      tags:
          - client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRegisterRequest'
      responses:
        "200":
            description: Success - agent is registered
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AgentRegisterResponse'
        "400":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBadRequest'
      
        "500":
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseInternal'
  /api/v2/client:
    get:
      tags:
        - client
      summary: Get information about the registered agent
      description: This endpoint retrieves the `agentID`, `feedURL` and `name` if an agent is registered.
      operationId: GetClient
      responses:
        '200':
          description: Success - agent info is returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAgentDetailsResponse'
        "404":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseNotFound'
        "500":
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseInternal'
  /api/v2/client/feed:
    get:
      summary: Get action approval requests Feed (via websocket) from Qredo Backend
      tags:
        - client
      description: This endpoint feeds approval requests coming from the Qredo Backend to the agent.
      operationId: ClientFeed
      responses:
        "200":
            description: Success - action info is received
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ClientFeedActionResponse'
        "500":
            description: Internal error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseInternal'
                  
  /api/v2/client/action/{action_id}:
    delete:
      summary: Reject a transaction
      tags:
        - action
      description: This endpoint rejects an action based on the action ID, `action_id`, passed.
      operationId: ActionReject
      parameters:
        - schema:
            type: string
          name: action_id
          in: path
          required: true
          description: The ID of the action that is received from the feed.
          example: 2WKtGnLJugxtYHOg2KSNYggRf8Y
      
      responses:
        "200":
            description: Success - action is rejected
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActionResponse'
        "400":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBadRequest'
        "500":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseInternal'
     
    put:
      summary: Approve a transaction
      tags:
          - action
      description: This endpoint approves an action based on the action ID, `action_id`, passed.
      operationId: ActionApprove
      parameters:
        - schema:
            type: string
          name: action_id
          in: path
          required: true
          description: The ID of the action that is received from the feed.
          example: 2WKtGnLJugxtYHOg2KSNYggRf8Y
     
      responses:
        "200":
            description: Success - action is approved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ActionResponse'
        "400":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseBadRequest'
        "500":
            description: Bad request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponseInternal'
  /api/v2/healthcheck/config:
    get:
        summary: Check application configuration
        tags:
          - healthcheck
        description: This endpoint returns the application configuration.
        operationId: HealthcheckConfig
        responses:
            "200":
                description: Success - the configuration info is retrieved
                content:
                 application/json:
                    schema:
                      $ref: '#/components/schemas/ConfigResponse'
  /api/v2/healthcheck/status:
    get:
        description: This endpoint returns the application status.
        operationId: HealthcheckStatus
        summary: Check application status
        tags:
            - healthcheck
        responses:
           "200":
                description: Success - the status information is retrieved
                content:
                 application/json:
                    schema:
                      $ref: '#/components/schemas/StatusResponse'
        
  /api/v2/healthcheck/version:
      get:
        description: This endpoint returns information about the application version.
        operationId: HealthCheckVersion
        summary: Check application version
        tags:
             - healthcheck
        responses:
              "200":
                description: Success - the version information is retrieved
                content:
                 application/json:
                    schema:
                      $ref: '#/components/schemas/VersionResponse'
         
components:
  schemas:
    AgentRegisterRequest:
        type: object
        properties:
            APIKeyID:
                description: The ID of the Qredo API Key.
                example: a.HLRrw3PSiS45QL... (truncated)
                type: string
            secret:
                description: The secret of the Qredo API Key.
                example: JDJhJDA0JGlHNTV2... (truncated)
                type: string
            workspaceID:
                description: The ID of the Qredo workspace in which the API Key is defined.
                example: 2VvsjKTf31cnRwM.. (truncated)
                type: string
    AgentRegisterResponse:
        $ref: '#/components/schemas/GetAgentDetailsResponse'
    ActionResponse:
        type: object
        properties:
            actionID:
                description: The ID of the action.
                example: 2WKtGnLJugxtYHOg2KSNYggRf8Y
                type: string
            status:
                description: The status of the transaction
                enum:
                    - approved
                    - rejected
                type: string
    GetAgentDetailsResponse:
      type: object
      properties:
          agentID:
              description: The ID of the agent.
              example: a.HLRrw3PSiS45QL... (truncated)
              type: string
          feedURL:
              description: The feed WebSocket URL.
              example: ws://0.0.0.0:8007/api/v2/client/feed
              type: string
          name:
              description: The name of the Agent.
              example: My Signing Agent
              type: string   
    ClientFeedActionResponse:
        type: object
        properties:
          id:
            type: string
            example: 2WKtGnLJugxtYHOgs...(truncated)
          type:
            type: integer
            example: 25
          status:
            type: integer
            example: 1
          description:
            type: string
            example: ""
          approverID:
            type: string
            example: a.HLRrw3PSiS45QLf...(truncated)
          dataID:
            type: string
            example: 46vbH854RpRAZoWtf...(truncated)
          senderID:
            type: string
            example: 46vbH854RpRAZoWxf...(truncated)
          payload:
            type: string
            example: yJwb2xpY3lOYW1lIj...(truncated)
          messages:
            type: array
            items:
              type: string
              example: CAESIJ2RefS68iy93ng...(truncated)
          signatures:
            type: array
            items:
              type: string
            example: null
          timestamp:
            type: integer
            example: 1696493005
          actionSubject:
            type: object
            example: null
          actionTime:
            type: integer
          expireTime:
            type: integer
            example: 1696496605
          metadata:
            type: string
            example: "e30="
          created:
            type: integer
            example: 1696496605
  
    ConfigResponse:
      type: object
      properties:
          autoApproval:
              $ref: '#/components/schemas/AutoApprove'
          base:
              $ref: '#/components/schemas/Base'
          http:
              $ref: '#/components/schemas/HttpSettings'
          loadBalancing:
              $ref: '#/components/schemas/LoadBalancing'
          logging:
              $ref: '#/components/schemas/Logging'
          store:
              $ref: '#/components/schemas/Store'
          websocket:
              $ref: '#/components/schemas/WebSocketConfig'
    AWSConfig:
      type: object
      description: AWSConfig is the AWS configuration when Base store type is set to aws
      properties:
          configSecret:
              description: The name of the AWS Secrets Manager secret containing the encrypted data.
              example: secrets_manager_secret
              type: string
          region:
              description: The AWS region where the secret is stored.
              example: eu-west-3
              type: string
    AutoApprove:
      type: object
      properties:
          enabled:
              description: Activate the automatic approval of every transaction that is received.
              example: true
              type: boolean
          retryIntervalMaxSec:
              description: The maximum time over which the Signing Agent retries action approval. After this period, it’s considered as a failure.
              example: 300
              format: int64
              type: integer
          retryIntervalSec:
              description: The interval over which the Signing Agent attempts to approve an action. It will cycle this interval until the `retryIntervalMaxSec` is reached.
              example: 5
              format: int64
              type: integer
    Base:
      type: object
      properties:
          qredoAPI:
              description: The URL of the Qredo API.
              example: https://api-v2.qredo.network/api/v2
              type: string
      
    StatusResponse:
      type: object
      properties:
        websocket:
          $ref: '#/components/schemas/HealthCheckStatusResponse'
 
  
    HttpSettings:
        properties:
            CORSAllowOrigins:
                description: The value of the Access-Control-Allow-Origin of the responses of the build in API.
                example: '''*'''
                items:
                    type: string
                type: array
            TLS:
                $ref: '#/components/schemas/TLSConfig'
            addr:
                description: The address and port the service runs on [the bind address and port the build in API endpoints].
                example: 0.0.0.0:8007
                type: string
            logAllRequests:
                description: Log all incoming requests to the build in API.
                example: true
                type: boolean
        type: object
    LoadBalancing:
        properties:
            actionIDExpirationSec:
                description: The expiration of actionID variable in Redis in seconds.
                example: 6
                format: int64
                type: integer
            enable:
                description: Enables the load-balancing logic.
                example: true
                type: boolean
            onLockErrorTimeoutMs:
                description: The on lock timeout in milliseconds.
                example: 300
                format: int64
                type: integer
            redis:
                $ref: '#/components/schemas/RedisConfig'
        type: object
    Logging:
        properties:
            format:
                description: Output format of the log.
                enum:
                    - text
                    - json
                example: json
                type: string
            level:
                description: Log level to be output.
                enum:
                    - info
                    - warn
                    - error
                    - debug
                example: debug
                type: string
        type: object
    OciConfig:
        description: OciConfig is the OCI configuration when Base store type is set to oci
        properties:
            compartment:
                description: The OCID where the vault and encryption key reside.
                example: ocid1.tenancy.oc1...
                type: string
            configSecret:
                description: The name of secret that will be used to store the data.
                example: automated_approver_config
                type: string
            secretEncryptionKey:
                description: The encryption key used for both the secret and the data inside the secret.
                example: ocid1.key.oc1...
                type: string
            vault:
                description: The OCID of the vault where the secret will be stored.
                example: ocid1.vault.oc1...
                type: string
        type: object
    RedisConfig:
        description: RedisConfig is the redis configuration when LoadBalancing is enabled
        properties:
            db:
                description: Redis database to be selected after connecting to the server.
                example: 0
                format: int64
                type: integer
            host:
                description: The Redis host.
                example: redis
                type: string
            password:
                description: The Redis password.
                example: just a password
                type: string
            port:
                description: The Redis port.
                example: 6379
                format: int64
                type: integer
        type: object
         
    Store:
        properties:
            aws:
                $ref: '#/components/schemas/AWSConfig'
            file:
                description: The path to the storage file when `file` store is used.
                example: /volume/ccstore.db
                type: string
            oci:
                $ref: '#/components/schemas/OciConfig'
            type:
                description: The type of store to use to store the private key information for the Signing Agent.
                enum:
                    - file
                    - oci
                    - aws
                example: file
                type: string
        type: object
    TLSConfig:
        properties:
            certFile:
                description: The cert file to use for the TLS server.
                example: tls/domain.crt
                type: string
            enabled:
                description: Enable TLS for the internal HTTP server.
                example: true
                type: boolean
            keyFile:
                description: The key file to use for the TLS server.
                example: tls/domain.key
                type: string
        type: object
    VersionResponse:
        properties:
            buildDate:
                description: The application build date.
                example: "2022-12-01"
                type: string
            buildType:
                description: The application build type.
                example: dev
                type: string
            buildVersion:
                description: The application build version.
                example: v1.0.0
                type: string
        type: object
    WebSocketConfig:
        properties:
            pingPeriodSec:
                description: The ping period for the ping handler in seconds.
                example: 5
                format: int64
                type: integer
            pongWaitSec:
                description: The pong wait for the pong handler in seconds.
                example: 10
                format: int64
                type: integer
            qredoWebsocket:
                description: The URL of the Qredo WebSocket feed.
                example: wss://api-v2.qredo.network/api/v2/actions/signrequests
                type: string
            readBufferSize:
                description: The WebSocket upgrader read buffer size in bytes.
                example: 512
                format: int64
                type: integer
            reconnectIntervalSec:
                description: The reconnect interval in seconds.
                example: 5
                format: int64
                type: integer
            reconnectTimeoutSec:
                description: The reconnect timeout in seconds.
                example: 300
                format: int64
                type: integer
            writeBufferSize:
                description: The WebSocket upgrader write buffer size in bytes.
                example: 1024
                format: int64
                type: integer
            writeWaitSec:
                description: The write wait in seconds.
                example: 10
                format: int64
                type: integer
        type: object
    HealthCheckStatusResponse:
      type: object
      properties:
        connectedClients:
            description: The number of connected feed clients.
            example: 2
            format: uint32
            type: integer
        localFeedURL:
            description: The local feed WebSocket URL.
            example: ws://localhost:8007/api/v2/client/feed
            type: string
        readyState:
            description: The state of the WebSocket connection with the server.
            enum:
                - OPEN
                - CLOSED
                - CONNECTING
            example: OPEN
            type: string
        remoteFeedURL:
            description: The server WebSocket URL.
            example: wss://api-v2.qredo.network/api/v2/actions/signrequests
            type: string
    
    ErrorResponseBadRequest:
        properties:
            Code:
                description: The result code of the request.
                example: 400
                format: int64
                type: integer
            Detail:
                description: The result message of the request.
                example: signing agent already registered
                type: string
        type: object
    ErrorResponseInternal:
        properties:
            Code:
                description: The result code of the request.
                example: 500
                format: int64
                type: integer
            Detail:
                description: The result message of the request.
                example: failed to register agent
                type: string
        type: object
    ErrorResponseNotFound:
        properties:
            Code:
                description: The result code of the request.
                example: 404
                format: int64
                type: integer
            Detail:
                description: The result message of the request.
                example: agent not registered
                type: string
        type: object